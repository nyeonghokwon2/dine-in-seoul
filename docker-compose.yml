version: "3.9"

services:
  # ─── 1) 데이터 복사 전용 초기 컨테이너 ─────────────────────────────────────
  data-sync:
    image: busybox
    container_name: data-sync
    volumes:
      # named-volume → /opt/airflow/data
      - type: volume
        source: data_volume
        target: /opt/airflow/data

      # host ./data → /data-host (읽기 전용, cached)
      - type: bind
        source: ./data
        target: /data-host
        read_only: true
        consistency: cached

    entrypoint:
      - sh
      - -c
      - |
        cp -r /data-host/. /opt/airflow/data && \
        chown -R 50000:50000 /opt/airflow/data && \
        echo 'Data sync completed.'

  # ─── 2) PostgreSQL ─────────────────────────────────────────────────────────
  postgres:
    image: postgres:13
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_db:/var/lib/postgresql/data

  # ─── 3) Airflow 초기화 ───────────────────────────────────────────────────────
  airflow-init:
    build: .
    container_name: airflow-init
    depends_on:
      - postgres
      - data-sync # ← data-sync 가 먼저 실행되어야 함
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    entrypoint:
      - /bin/bash
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com \
          --password admin
    volumes:
      - data_volume:/opt/airflow/data
      - ./dags:/opt/airflow/dags:cached
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

  # ─── 4) Airflow Webserver ─────────────────────────────────────────────────
  airflow-webserver:
    build: .
    container_name: airflow-webserver
    depends_on:
      - airflow-init
    ports:
      - "8080:8080" # 필요시 "8081:8080" 으로 변경
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    command: webserver
    volumes:
      - data_volume:/opt/airflow/data
      - ./dags:/opt/airflow/dags:cached
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

  # ─── 5) Airflow Scheduler ─────────────────────────────────────────────────
  airflow-scheduler:
    build: .
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    command: scheduler
    volumes:
      - data_volume:/opt/airflow/data
      - ./dags:/opt/airflow/dags:cached
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

volumes:
  postgres_db:
  data_volume:
